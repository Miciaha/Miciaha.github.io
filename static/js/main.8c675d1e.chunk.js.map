{"version":3,"sources":["ScrollMagic.js","Components/Layouts/About.js","Components/Menu.js","expData.js","Components/Layouts/Experience.js","Components/AccentMenu.js","App.js","serviceWorker.js","index.js"],"names":["ScrollMagic","Scene","addOption","val","extend","_tween","this","log","_log","Array","prototype","splice","call","arguments","apply","on","updateTweenProgress","e","removeTween","reset","progress","state","repeat","paused","play","pause","duration","reverse","tweenChanges","tweenTo","setTween","TweenObject","params","newTween","length","Tween","to","Timeline","smoothChildTiming","add","yoyo","controller","triggerElement","loglevel","triggerTweens","getTweensOf","vertical","info","forEach","value","index","tweenvars","vars","css","undefined","top","bottom","left","right","parseFloat","version","thisTween","oldCallback","list","getChildren","newCallback","i","onOverwrite","kill","About","textNav","gsap","Controller","addTo","id","class","React","Component","Menu","href","src","alt","target","rel","name","description","logo","logoSize","date","category","show","height","Cell","toggle","maximized","className","style","backgroundImage","cursor","display","onClick","delay","CloseOutlined","from","opacity","transform","enter","leave","width","AccentMenu","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6OAGAA,IAAYC,MAAMC,UAAU,gBAC1B,GAEA,SAAUC,GACR,QAASA,KAGbH,IAAYC,MAAMG,QAAO,WACrB,IACEC,EADEJ,EAAQK,KAGRC,EAAM,WACJN,EAAMO,OACRC,MAAMC,UAAUC,OAAOC,KAAKC,UAAW,EAAG,EAAG,mBAAoB,MACjEZ,EAAMO,KAAKM,MAAMR,KAAMO,aAK3BZ,EAAMc,GAAG,wBAAwB,WAC/BC,OAEFf,EAAMc,GAAG,uBAAuB,SAAUE,GACxChB,EAAMiB,YAAYD,EAAEE,UAOtB,IAAIH,EAAsB,WACxB,GAAIX,EAAQ,CACV,IACAe,EAAWnB,EAAMmB,WACfC,EAAQpB,EAAMoB,QACZhB,EAAOiB,SAA+B,IAArBjB,EAAOiB,SAEZ,WAAVD,GAAsBhB,EAAOkB,SAC/BlB,EAAOmB,OACY,WAAVH,GAAuBhB,EAAOkB,UACvClB,EAAOoB,QAEAL,IAAaf,EAAOe,aAEJ,IAArBnB,EAAMyB,WAEJN,EAAW,EACbf,EAAOmB,OAEPnB,EAAOsB,UAIL1B,EAAM2B,gBAAkBvB,EAAOwB,QAEjCxB,EAAOwB,QAAQT,EAAWf,EAAOqB,YAGjCrB,EAAOe,SAASA,GAAUK,WA+CpCxB,EAAM6B,SAAW,SAAUC,EAAaL,EAAUM,GAChD,IAAIC,EACApB,UAAUqB,OAAS,IACjBrB,UAAUqB,OAAS,IACrBF,EAASN,EACTA,EAAW,GAEbK,EAAcI,IAAMC,GAAGL,EAAaL,EAAUM,IAEhD,KAGIC,EADEI,IACS,IAAIA,IAAS,CACtBC,mBAAmB,IAClBC,IAAIR,GAEIA,GAEJN,QACT,MAAOR,GAEP,OADAV,EAAI,EAAG,mFACAN,EAkBT,GAhBII,GACFJ,EAAMiB,cAERb,EAAS4B,EAGLF,EAAYT,SAAoC,IAA1BS,EAAYT,WACpCjB,EAAOiB,QAAQ,GACfjB,EAAOmC,KAAKT,EAAYS,SAGtBvC,EAAM2B,iBAAmBvB,EAAOwB,SAClCtB,EAAI,EAAG,gGAILF,GAAUJ,EAAMwC,cAAgBxC,EAAMyC,kBAAoBzC,EAAM0C,YAAc,EAAG,CACnF,IACAC,EAAgBT,IAAMU,YAAY5C,EAAMyC,kBACtCI,EAAW7C,EAAMwC,aAAaM,KAAK,YACrCH,EAAcI,SAAQ,SAAUC,EAAOC,GACrC,IACAC,EAAYF,EAAMG,KAAKC,KAAOJ,EAAMG,KAEpC,GADcN,OAA8BQ,IAAlBH,EAAUI,UAA0CD,IAArBH,EAAUK,YAA4CF,IAAnBH,EAAUM,WAA0CH,IAApBH,EAAUO,MAGpI,OADAnD,EAAI,EAAG,0GACA,KAMb,GAAIoD,WAAWxB,IAAMyB,UAAY,KAO/B,IANA,IAMgBC,EAAWC,EAL3BC,EAAO1D,EAAO2D,YAAc3D,EAAO2D,aAAY,GAAM,GAAM,GAAS,CAAC3D,GAEnE4D,EAAc,WACZ1D,EAAI,EAAG,kLAEF2D,EAAI,EAA2BA,EAAIH,EAAK7B,OAAQgC,IACvDL,EAAYE,EAAKG,GACbJ,IAAgBG,IAClBH,EAAcD,EAAUT,KAAKe,YAC7BN,EAAUT,KAAKe,YAAc,WACvBL,GACFA,EAAYhD,MAAMR,KAAMO,WAE1BoD,EAAYnD,MAAMR,KAAMO,aAQhC,OAHAN,EAAI,EAAG,eAEPS,IACOf,GAoBTA,EAAMiB,YAAc,SAAUC,GAS5B,OARId,IACEc,GACFd,EAAOe,SAAS,GAAGK,QAErBpB,EAAO+D,OACP/D,OAASiD,EACT/C,EAAI,EAAG,0BAA4BY,EAAQ,OAAS,SAAW,MAE1DlB,MAKED,QAAf,ECjKeqE,E,kLArDX,IAAIC,EAAUC,IAAKnC,GAAG,SAAU,GAAK,CACnCoB,OAAQ,WAELf,EAAa,IAAIzC,EAAYwE,WAGjC,IAAIxE,EAAYC,MAAM,CAACyC,eAFZ,gBAGRZ,SAASwC,GACTG,MAAMhC,K,+BAGV,OACE,6BACE,yBAAKiC,GAAG,OAAOC,MAAM,qBACrB,wBAAIA,MAAM,cACR,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,8BAEA,yBAAKA,MAAM,QACT,yBAAKA,MAAM,YACT,wBAAID,GAAG,aAAaC,MAAM,sBAA1B,WAIF,yBAAKD,GAAG,QAAQC,MAAM,yBAClB,sCAAW,0BAAMD,GAAG,WAAT,uBAAX,8EACA,qFACA,sDAA2B,gDAA3B,4B,GA9CIE,IAAMC,WCkFXC,E,oNAjEX,OACE,6BACE,yBAAKH,MAAM,wBACT,uBAAGA,MAAM,WAAWI,KAAK,SACzB,yBAAKC,IAAI,kBAAkBC,IAAI,mBAGjC,yBAAKP,GAAG,kBACN,yBAAKC,MAAM,wBACT,6BACE,wBAAID,GAAG,QAWL,4BACE,uBACEK,KAAK,qCACLG,OAAO,UAFT,UAKA,uBACEP,MAAM,WACNI,KAAK,uCACLG,OAAO,SACPC,IAAI,uBAEJ,uBAAGR,MAAM,sBAGb,4BACE,uBACEA,MAAM,WACNI,KAAK,6BACLG,OAAO,SACPC,IAAI,uBAEJ,uBAAGR,MAAM,6B,GA3DVC,IAAMC,W,gBCLV,GACX,CACIO,KAAM,sBACNC,YAAa,oBACbhC,IAAK,UACLiC,KAAM,yBACNC,SAAU,MACVC,KAAM,yBACNC,SAAU,uBACVC,KAAM,OACNC,OAAQ,KAEZ,CACIP,KAAM,iBACNC,YAAa,oBACbC,KAAM,qBACNC,SAAU,OACVlC,IAAK,UACLoC,SAAU,CAAC,uBAAwB,cACnCD,KAAM,8BACNE,KAAM,OACNC,OAAQ,KAEZ,CACIP,KAAM,aACNC,YAAa,oBACbC,KAAM,qBACNC,SAAU,OACVE,SAAU,uBACVD,KAAM,gCACNnC,IAAK,UACLqC,KAAM,OACNC,OAAQ,KAEZ,CACIP,KAAM,kBACNC,YAAa,oBACbC,KAAM,sBACNC,SAAU,MACVlC,IAAK,UACLoC,SAAU,CAAC,aAAc,aACzBD,KAAM,wBACNE,KAAM,OACNC,OAAQ,KAEZ,CACIP,KAAM,sBACNC,YAAa,oBACbC,KAAM,sBACNC,SAAU,MACVlC,IAAK,QACLoC,SAAU,eACVD,KAAM,2BACNE,KAAM,OACNC,OAAQ,KAEZ,CACIP,KAAM,2CACNC,YAAa,oBACbC,KAAM,sBACNC,SAAU,MACVlC,IAAK,UACLoC,SAAU,WACVD,KAAM,4BACNG,OAAQ,IACRD,KAAM,SC5DRE,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQT,EAAX,EAAWA,KAAcC,GAAzB,EAAiBM,OAAjB,EAAyBN,aAAkBS,GAA3C,EAAsCzC,IAAtC,EAA2CyC,WAAWR,EAAtD,EAAsDA,KAAMC,EAA5D,EAA4DA,SAAUG,EAAtE,EAAsEA,KAAMF,EAA5E,EAA4EA,KAA5E,OACX,yBACEO,UAAU,OACVC,MAAO,CAAEC,gBAAiB,8CAA+CC,OAASJ,EAAwB,OAAZ,UAAoBK,QAAST,GAC3HU,QAAUN,OAAqBxC,EAATuC,GACtB,kBAAC,IAAD,CAAMH,KAAMI,EAAWO,MAAOP,EAAY,IAAM,GAC9C,yBAAKC,UAAU,UAAUK,QAASP,GAChC,kBAAC,IAAD,CAAMQ,MAAO,KACX,yBAAKN,UAAU,SACb,kBAACO,EAAA,EAAD,CAAeN,MAAO,CAACE,OAAQ,WAAYE,QAASP,KAEtD,4BAAKT,GACL,2BAAIC,GACJ,2BAAIG,MAIV,kBAAC,IAAD,CACEE,MAAOI,EACPS,KAAM,CAAEC,QAAS,EAAGC,UAAW,0BAC/BC,MAAO,CAAEF,QAAS,EAAGC,UAAW,wBAChCE,MAAO,CAAEH,QAAS,EAAGC,UAAW,0BAChCJ,MAAOP,EAAY,EAAI,KACvB,yBAAKC,UAAU,aACf,yBAAKA,UAAU,YAAYC,MAAO,CAACY,MAAOrB,GAAWP,IAAKM,IAC1D,yBAAKS,UAAU,aAAY,4BAAKX,QCgDvByB,GD1CUjC,IAAMC,U,oNCoBvB,OACI,6BACI,yBAAKF,MAAM,sCACP,yBAAKA,MAAM,SACP,yBAAKA,MAAM,eACX,qDAEA,yBAAKA,MAAM,eACX,yBACID,GAAG,qBACHC,MAAM,qBACNK,IAAI,gBACJC,IAAI,yB,GA/DPL,IAAMC,YCahBiC,E,uKAVX,OACA,yBAAKf,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANYnB,IAAMC,WCMJkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8c675d1e.chunk.js","sourcesContent":["import ScrollMagic from 'scrollmagic'\r\nimport {TweenLite as Tween, TimelineMax as Timeline} from 'gsap';\r\n\r\nScrollMagic.Scene.addOption(\"tweenChanges\", // name\r\n  false, // default\r\n\r\n  function (val) { // validation callback\r\n    return !!val;\r\n});\r\n\r\nScrollMagic.Scene.extend(function () {\r\n    var Scene = this,\r\n      _tween;\r\n\r\n    var log = function () {\r\n      if (Scene._log) { // not available, when main source minified\r\n        Array.prototype.splice.call(arguments, 1, 0, \"(animation.gsap)\", \"->\");\r\n        Scene._log.apply(this, arguments);\r\n      }\r\n    };\r\n\r\n    // set listeners\r\n    Scene.on(\"progress.plugin_gsap\", function () {\r\n      updateTweenProgress();\r\n    });\r\n    Scene.on(\"destroy.plugin_gsap\", function (e) {\r\n      Scene.removeTween(e.reset);\r\n    });\r\n\r\n    /**\r\n     * Update the tween progress to current position.\r\n     * @private\r\n     */\r\n    var updateTweenProgress = function () {\r\n      if (_tween) {\r\n        var\r\n        progress = Scene.progress(),\r\n          state = Scene.state();\r\n        if (_tween.repeat && _tween.repeat() === -1) {\r\n          // infinite loop, so not in relation to progress\r\n          if (state === 'DURING' && _tween.paused()) {\r\n            _tween.play();\r\n          } else if (state !== 'DURING' && !_tween.paused()) {\r\n            _tween.pause();\r\n          }\r\n        } else if (progress !== _tween.progress()) { // do we even need to update the progress?\r\n          // no infinite loop - so should we just play or go to a specific point in time?\r\n          if (Scene.duration() === 0) {\r\n            // play the animation\r\n            if (progress > 0) { // play from 0 to 1\r\n              _tween.play();\r\n            } else { // play from 1 to 0\r\n              _tween.reverse();\r\n            }\r\n          } else {\r\n            // go to a specific point in time\r\n            if (Scene.tweenChanges() && _tween.tweenTo) {\r\n              // go smooth\r\n              _tween.tweenTo(progress * _tween.duration());\r\n            } else {\r\n              // just hard set it\r\n              _tween.progress(progress).pause();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Add a tween to the scene.  \r\n     * If you want to add multiple tweens, add them into a GSAP Timeline object and supply it instead (see example below).  \r\n     * \r\n     * If the scene has a duration, the tween's duration will be projected to the scroll distance of the scene, meaning its progress will be synced to scrollbar movement.  \r\n     * For a scene with a duration of `0`, the tween will be triggered when scrolling forward past the scene's trigger position and reversed, when scrolling back.  \r\n     * To gain better understanding, check out the [Simple Tweening example](../examples/basic/simple_tweening.html).\r\n     *\r\n     * Instead of supplying a tween this method can also be used as a shorthand for `TweenMax.to()` (see example below).\r\n     * @memberof! animation.GSAP#\r\n     *\r\n     * @example\r\n     * // add a single tween directly\r\n     * scene.setTween(TweenMax.to(\"obj\"), 1, {x: 100});\r\n     *\r\n     * // add a single tween via variable\r\n     * var tween = TweenMax.to(\"obj\"), 1, {x: 100};\r\n     * scene.setTween(tween);\r\n     *\r\n     * // add multiple tweens, wrapped in a timeline.\r\n     * var timeline = new TimelineMax();\r\n     * var tween1 = TweenMax.from(\"obj1\", 1, {x: 100});\r\n     * var tween2 = TweenMax.to(\"obj2\", 1, {y: 100});\r\n     * timeline\r\n     *    .add(tween1)\r\n     *    .add(tween2);\r\n     * scene.addTween(timeline);\r\n     *\r\n     * // short hand to add a TweenMax.to() tween\r\n     * scene.setTween(\"obj3\", 0.5, {y: 100});\r\n     *\r\n     * // short hand to add a TweenMax.to() tween for 1 second\r\n     * // this is useful, when the scene has a duration and the tween duration isn't important anyway\r\n     * scene.setTween(\"obj3\", {y: 100});\r\n     *\r\n     * @param {(object|string)} TweenObject - A TweenMax, TweenLite, TimelineMax or TimelineLite object that should be animated in the scene. Can also be a Dom Element or Selector, when using direct tween definition (see examples).\r\n     * @param {(number|object)} duration - A duration for the tween, or tween parameters. If an object containing parameters are supplied, a default duration of 1 will be used.\r\n     * @param {object} params - The parameters for the tween\r\n     * @returns {Scene} Parent object for chaining.\r\n     */\r\n    Scene.setTween = function (TweenObject, duration, params) {\r\n      var newTween;\r\n      if (arguments.length > 1) {\r\n        if (arguments.length < 3) {\r\n          params = duration;\r\n          duration = 1;\r\n        }\r\n        TweenObject = Tween.to(TweenObject, duration, params);\r\n      }\r\n      try {\r\n        // wrap Tween into a Timeline Object if available to include delay and repeats in the duration and standardize methods.\r\n        if (Timeline) {\r\n          newTween = new Timeline({\r\n            smoothChildTiming: true\r\n          }).add(TweenObject);\r\n        } else {\r\n          newTween = TweenObject;\r\n        }\r\n        newTween.pause();\r\n      } catch (e) {\r\n        log(1, \"ERROR calling method 'setTween()': Supplied argument is not a valid TweenObject\");\r\n        return Scene;\r\n      }\r\n      if (_tween) { // kill old tween?\r\n        Scene.removeTween();\r\n      }\r\n      _tween = newTween;\r\n\r\n      // some properties need to be transferred it to the wrapper, otherwise they would get lost.\r\n      if (TweenObject.repeat && TweenObject.repeat() === -1) { // TweenMax or TimelineMax Object?\r\n        _tween.repeat(-1);\r\n        _tween.yoyo(TweenObject.yoyo());\r\n      }\r\n      // Some tween validations and debugging helpers\r\n      if (Scene.tweenChanges() && !_tween.tweenTo) {\r\n        log(2, \"WARNING: tweenChanges will only work if the TimelineMax object is available for ScrollMagic.\");\r\n      }\r\n\r\n      // check if there are position tweens defined for the trigger and warn about it :)\r\n      if (_tween && Scene.controller() && Scene.triggerElement() && Scene.loglevel() >= 2) { // controller is needed to know scroll direction.\r\n        var\r\n        triggerTweens = Tween.getTweensOf(Scene.triggerElement()),\r\n          vertical = Scene.controller().info(\"vertical\");\r\n        triggerTweens.forEach(function (value, index) {\r\n          var\r\n          tweenvars = value.vars.css || value.vars,\r\n            condition = vertical ? (tweenvars.top !== undefined || tweenvars.bottom !== undefined) : (tweenvars.left !== undefined || tweenvars.right !== undefined);\r\n          if (condition) {\r\n            log(2, \"WARNING: Tweening the position of the trigger element affects the scene timing and should be avoided!\");\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      // warn about tween overwrites, when an element is tweened multiple times\r\n      if (parseFloat(Tween.version) >= 1.14) { // onOverwrite only present since GSAP v1.14.0\r\n        var\r\n        list = _tween.getChildren ? _tween.getChildren(true, true, false) : [_tween],\r\n          // get all nested tween objects\r\n          newCallback = function () {\r\n            log(2, \"WARNING: tween was overwritten by another. To learn how to avoid this issue see here: https://github.com/janpaepke/ScrollMagic/wiki/WARNING:-tween-was-overwritten-by-another\");\r\n          };\r\n        for (var i = 0, thisTween, oldCallback; i < list.length; i++) { /*jshint loopfunc: true */\r\n          thisTween = list[i];\r\n          if (oldCallback !== newCallback) { // if tweens is added more than once\r\n            oldCallback = thisTween.vars.onOverwrite;\r\n            thisTween.vars.onOverwrite = function () {\r\n              if (oldCallback) {\r\n                oldCallback.apply(this, arguments);\r\n              }\r\n              newCallback.apply(this, arguments);\r\n            };\r\n          }\r\n        }\r\n      }\r\n      log(3, \"added tween\");\r\n\r\n      updateTweenProgress();\r\n      return Scene;\r\n    };\r\n\r\n    /**\r\n     * Remove the tween from the scene.  \r\n     * This will terminate the control of the Scene over the tween.\r\n     *\r\n     * Using the reset option you can decide if the tween should remain in the current state or be rewound to set the target elements back to the state they were in before the tween was added to the scene.\r\n     * @memberof! animation.GSAP#\r\n     *\r\n     * @example\r\n     * // remove the tween from the scene without resetting it\r\n     * scene.removeTween();\r\n     *\r\n     * // remove the tween from the scene and reset it to initial position\r\n     * scene.removeTween(true);\r\n     *\r\n     * @param {boolean} [reset=false] - If `true` the tween will be reset to its initial values.\r\n     * @returns {Scene} Parent object for chaining.\r\n     */\r\n    Scene.removeTween = function (reset) {\r\n      if (_tween) {\r\n        if (reset) {\r\n          _tween.progress(0).pause();\r\n        }\r\n        _tween.kill();\r\n        _tween = undefined;\r\n        log(3, \"removed tween (reset: \" + (reset ? \"true\" : \"false\") + \")\");\r\n      }\r\n      return Scene;\r\n    };\r\n\r\n  });\r\n\r\nexport default ScrollMagic; ","import React from \"react\";\r\nimport ScrollMagic from \"../../ScrollMagic\";\r\nimport gsap from \"gsap\";\r\n\r\nclass About extends React.Component {\r\n  componentDidMount(){\r\n    var textNav = gsap.to(\".intro\", 0.5, {\r\n      bottom: \"-300px\",\r\n    });\r\n     var controller = new ScrollMagic.Controller();\r\n     var item = \"#experience\";\r\n      \r\n     new ScrollMagic.Scene({triggerElement: item})\r\n       .setTween(textNav)\r\n       .addTo(controller);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>        \r\n        <div id=\"home\" class=\"section scrollify\">\r\n        <ul class=\"background\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n          <div class=\"home\">\r\n            <div class=\"greeting\">\r\n              <h1 id=\"hello-text\" class=\"animated slideInUp\">\r\n                Hello!\r\n              </h1>\r\n            </div>            \r\n            <div id=\"intro\" class=\"animated fadeIn intro\">\r\n                <h1>I am a <span id=\"rainbow\">Software Developer </span>with a passion for people, problem-solving, programming, and alliteration.</h1>\r\n                <h3>Learning: React, NodeJS, Express, PostgreSQL, GraphQL</h3>\r\n                <h3>Languages: JavaScript, <strike>Parseltongue</strike> Python, C#, C++</h3>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport ScrollMagic from '../ScrollMagic';\r\nimport gsap from 'gsap';\r\n\r\n\r\nclass Menu extends React.Component {\r\n  componentDidMount(){\r\n    // var navTween = gsap.to(\"nav\", 0.5, {right: \"0\", backgroundColor: \"transparent\"});\r\n    // var expNav = gsap.to(\".expMenu\", 0.2, {opacity:\"0\", display:\"none\"})\r\n\r\n    // var controller = new ScrollMagic.Controller();\r\n    // var item = \"#experience\";\r\n    // new ScrollMagic.Scene({triggerElement:item})\r\n    //   .setTween(navTween) \r\n    //   .addTo(controller);\r\n\r\n    // new ScrollMagic.Scene({triggerElement: item})\r\n    //   .setTween(expNav)\r\n    //   .addTo(controller);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"logo animated fadeIn\">\r\n          <a class=\"menuItem\" href=\"#home\">\r\n          <img src=\"images/logo.svg\" alt=\"Miciaha Logo\" />\r\n          </a>\r\n        </div>\r\n        <div id=\"navigation-bar\">\r\n          <nav class=\"animated slideInLeft\">\r\n            <div>\r\n              <ul id=\"menu\">\r\n                 {/* <li class=\"menuItem expMenu\">\r\n                  <a class=\"menuItem proMenu\" href=\"#experience\">\r\n                    Experience\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a class=\"menuItem proMenu\" href=\"#projects\">\r\n                    Projects\r\n                  </a>\r\n                </li> */} \r\n                <li> \r\n                  <a \r\n                    href=\"/documents/miciaha_ivey_resume.pdf\" \r\n                    target=\"_blank\">\r\n                      Resume\r\n                  </a>\r\n                  <a\r\n                    class=\"menuItem\"\r\n                    href=\"https://www.linkedin.com/in/miciaha/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <i class=\"fab fa-linkedin\"></i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    class=\"menuItem\"\r\n                    href=\"https://github.com/Miciaha\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <i class=\"fab fa-github\"></i>\r\n                  </a>\r\n                </li>\r\n                {/* <li>\r\n                  <a\r\n                    class=\"menuItem\"\r\n                    href=\"#home\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <i class=\"fab fa-rebel\"></i>\r\n                  </a>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","export default [\r\n    {\r\n        name: 'Publix Supermarkets',\r\n        description: 'The job and stuff',\r\n        css: '#3E902D',\r\n        logo: 'images/publix_logo.png',\r\n        logoSize: '70%',\r\n        date: 'October 2019 - Present',\r\n        category: 'Software Development',\r\n        show: 'true',\r\n        height: 300\r\n    },\r\n    {\r\n        name: 'Proper Channel',\r\n        description: 'The job and stuff',\r\n        logo: 'images/pc_logo.png',\r\n        logoSize: '100%',\r\n        css: '#43BC9A',\r\n        category: ['Software Development', 'Web Design'],\r\n        date: 'March 2019 - September 2019',\r\n        show: 'true',\r\n        height: 300\r\n    },\r\n    {\r\n        name: 'VR Systems',\r\n        description: 'The job and stuff',\r\n        logo: 'images/vr_logo.png',\r\n        logoSize: '100%',\r\n        category: 'Software Development',\r\n        date: 'January 2018 - September 2018',\r\n        css: '#E62D3D',\r\n        show: 'true',\r\n        height: 300\r\n    },\r\n    {\r\n        name: 'Codecraft Works',\r\n        description: 'The job and stuff',\r\n        logo: 'images/ccw_logo.png',\r\n        logoSize: '70%',\r\n        css: '#FFB336',\r\n        category: ['Web Design', 'Education'],\r\n        date: 'July 2017 - July 2018',\r\n        show: 'true',\r\n        height: 300\r\n    },\r\n    {\r\n        name: 'City of Tallahassee',\r\n        description: 'The job and stuff',\r\n        logo: 'images/cot_logo.png',\r\n        logoSize: '70%',\r\n        css: 'black',\r\n        category: 'Tech Support',\r\n        date: 'May 2016 - February 2017',\r\n        show: 'none',\r\n        height: 300\r\n    },\r\n    {\r\n        name: 'FSU High-Performance Materials Institute',\r\n        description: 'The job and stuff',\r\n        logo: 'images/fsu_logo.png',\r\n        logoSize: '40%',\r\n        css: '#CEB888',\r\n        category: 'Research',\r\n        date: 'September 2013 - May 2014',\r\n        height: 300,\r\n        show: 'none'\r\n    }      \r\n]","import React from \"react\";\r\nimport { Grid, Slug, Fade} from 'mauerwerk'\r\nimport { CloseOutlined} from '@ant-design/icons'\r\nimport data from '../../expData'\r\n\r\nconst Cell = ({ toggle, name, height, description, css, maximized, logo, logoSize, show, date }) => (\r\n  <div\r\n    className=\"cell\"\r\n    style={{ backgroundImage: 'linear-gradient(to top, #fff 0%, #fff 100%)', cursor: !maximized ? 'pointer' : 'auto', display: show }}\r\n    onClick={!maximized ? toggle : undefined}>\r\n    <Fade show={maximized} delay={maximized ? 400 : 0}>\r\n      <div className=\"details\" onClick={toggle}>\r\n        <Slug delay={600}>\r\n          <div className='close'>\r\n            <CloseOutlined style={{cursor: 'pointer'}} onClick={toggle} />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>{description}</p>\r\n          <p>{date}</p>\r\n        </Slug>\r\n      </div>\r\n    </Fade>\r\n    <Fade\r\n      show={!maximized}\r\n      from={{ opacity: 0, transform: 'translate3d(0,140px,0)' }}\r\n      enter={{ opacity: 1, transform: 'translate3d(0,0px,0)' }}\r\n      leave={{ opacity: 0, transform: 'translate3d(0,-50px,0)' }}\r\n      delay={maximized ? 0 : 400}>\r\n      <div className=\"cellStart\">\r\n      <img className=\"logoImage\" style={{width: logoSize}} src={logo}/>\r\n      <div className=\"cellTitle\"><h2>{name}</h2></div>\r\n      </div>\r\n    </Fade>\r\n  </div>\r\n)\r\n\r\nclass Experience extends React.Component {\r\n  render() {\r\n    return (\r\n    <div>\r\n        <div id=\"experience\" class=\"section-exp experience scrollify\">\r\n            <div class=\"exp-header\">\r\n              <h1>E X P E R I E N C E</h1>\r\n            </div>\r\n            <div class=\"exp-content\">\r\n            <Grid\r\n          className=\"grid\"\r\n          // Arbitrary data, should contain keys, possibly heights, etc.\r\n          data={data}\r\n          // Key accessor, instructs grid on how to fet individual keys from the data set\r\n          keys={d => d.name}\r\n          // Can be a fixed value or an individual data accessor\r\n          heights={d => d.height}\r\n          // Number of columns\r\n          columns={3}\r\n          // Space between elements\r\n          margin={20}\r\n          // Removes the possibility to scroll away from a maximized element\r\n          lockScroll={false}\r\n          // Delay when active elements (blown up) are minimized again\r\n          closeDelay={400}>\r\n    \r\n          {(data, maximized, toggle) => (\r\n            <Cell {...data} maximized={maximized} toggle={toggle} />\r\n          )}\r\n        </Grid>\r\n        </div>\r\n        </div>\r\n    </div>  \r\n    )\r\n  }\r\n}\r\n\r\nexport default Experience;","import React from \"react\";\r\nimport ScrollMagic from '../ScrollMagic';\r\nimport gsap from 'gsap';\r\n\r\n\r\nclass AccentMenu extends React.Component {\r\n    componentDidMount(){\r\n        // var controller = new ScrollMagic.Controller();\r\n\r\n        // var aboutImage = gsap.to(\".about-image\", 0.5, {\r\n        //   bottom: \"-300px\",\r\n        //   opacity: \"0\",\r\n        //   display: \"none\",\r\n        // });\r\n        // var aboutTitle = gsap.to(\".about-title\", 0.5, {\r\n        //   bottom: \"-300px\",\r\n        //   opacity: \"0\",\r\n        //   display: \"none\",\r\n        // });\r\n    \r\n        // new ScrollMagic.Scene({\r\n        //   triggerElement: \"#experience\",\r\n        // })\r\n        //   .setTween(aboutImage)\r\n        //   .addTo(controller);\r\n    \r\n        // new ScrollMagic.Scene({\r\n        //   triggerElement: \"#experience\",\r\n        // })\r\n        //   .setTween(aboutTitle)\r\n        //   .addTo(controller);\r\n    \r\n        // var cardExperience = gsap.to(\".section-card\", 0.5, {\r\n        //   bottom: \"5%\",\r\n        //   right: \"50%\",\r\n        //   height: \"10px\",\r\n        //   width: \"50px\",\r\n        //   backgroundColor: \"white\",\r\n        // });\r\n        // var cardExpContent = gsap.to(\".section-card .experience\", 0.5, {\r\n        //   display: \"block\",\r\n        // });\r\n    \r\n        // new ScrollMagic.Scene({\r\n        //   triggerElement: \"#experience\",\r\n        // })\r\n        //   .setTween(cardExperience)\r\n        //   .addIndicators()\r\n        //   .addTo(controller);\r\n        // new ScrollMagic.Scene({\r\n        //   triggerElement: \"#experience\",\r\n        // })\r\n        //   .setTween(cardExpContent)\r\n        //   .addTo(controller);\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div class=\"section-card animated slideInRight\">\r\n                    <div class=\"about\">\r\n                        <div class=\"about-title\">\r\n                        <h1>Hi, I'm Miciaha Ivey</h1>\r\n                        </div>\r\n                        <div class=\"about-image\">\r\n                        <img\r\n                            id=\"about-image-effect\"\r\n                            class=\"animated slideInUp\"\r\n                            src=\"images/me.png\"\r\n                            alt=\"Miciaha Ivey\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccentMenu;","import React from 'react';\r\nimport About from './Components/Layouts/About';\r\nimport Menu from './Components/Menu';\r\nimport Experience from './Components/Layouts/Experience';\r\nimport AccentMenu from './Components/AccentMenu';\r\n\r\nclass App extends React.Component {\r\n  render(){  \r\n    return (\r\n    <div className=\"App\">\r\n      <Menu />\r\n      <AccentMenu />\r\n      <About />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}